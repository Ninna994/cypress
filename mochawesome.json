{
  "stats": {
    "suites": 6,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2021-08-22T20:18:53.938Z",
    "end": "2021-08-22T20:20:31.121Z",
    "duration": 44196,
    "testsRegistered": 6,
    "passPercent": 83.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2df768b7-c197-4ed5-b079-8e9d8befee73",
      "title": "",
      "fullFile": "cypress\\integration\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\integration\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2965275-d3f3-4fff-95cb-12fdbaadc96a",
          "title": "Alias and Invoke usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and Invoke usage Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 6860,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://automationteststore.com'); // standard price counting\ncy.get(\".thumbnail\").as('productThumbnail'); // cy.get('@productThumbnail').find('.oneprice').each(($el, index, $list) => {\n//     cy.log($el.text())\n// })\ncy.get('.thumbnail').find('.oneprice').invoke('text').as('itemPrice');\ncy.get('.thumbnail').find('.pricenew').invoke('text').as('saleItemPrice');\nvar itemsTotal = 0; // non sale items\ncy.get('@itemPrice').then(function ($linkText) {\n  var itemsPriceTotal = 0; // split array by $ sign\n  var itemPrice = $linkText.split('$'); // index\n  var i;\n  for (i = 0; i < itemPrice.length; i++) {\n    cy.log(itemPrice[i]);\n    itemsPriceTotal += Number(itemPrice[i]); // cy.log(itemsPriceTotal)\n  }\n  itemsTotal += itemsPriceTotal;\n  cy.log(\"Non sale price items total: \" + itemsTotal);\n}); // sale items and their price\ncy.get('@saleItemPrice').then(function ($linkText) {\n  var saleItemsPriceTotal = 0; // split array by $ sign\n  var saleItemPrice = $linkText.split('$'); // index\n  var i;\n  for (i = 0; i < saleItemPrice.length; i++) {\n    cy.log(saleItemPrice[i]);\n    saleItemsPriceTotal += Number(saleItemPrice[i]);\n  }\n  itemsTotal += saleItemsPriceTotal;\n  cy.log(\"Sale price items total: \" + saleItemsPriceTotal);\n}) // after doing code above do code bellow\n.then(function () {\n  cy.log(\"The total price of all products: \" + itemsTotal);\n  expect(itemsTotal).to.equal(616.7);\n});",
              "err": {},
              "uuid": "eb9b026e-55ec-44e8-85eb-5ab57863670f",
              "parentUUID": "a2965275-d3f3-4fff-95cb-12fdbaadc96a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb9b026e-55ec-44e8-85eb-5ab57863670f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9b21a18d-b3e4-4359-903c-c5270a0df2c5",
      "title": "",
      "fullFile": "cypress\\integration\\automation-test-store\\contact-us.js",
      "file": "cypress\\integration\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c9663d5f-06c1-4625-bf67-9bde801a5f32",
          "title": "Test Contact Us form via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "HAPPY PATH - from fixtures Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via Automation Test Store HAPPY PATH - from fixtures Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 5469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"a[href$= 'contact']\").click().then(function (linkText) {\n  cy.log(\"This is a link text: \" + linkText.text());\n});\ncy.get(\"@user\").then(function (user) {\n  cy.get('#ContactUsFrm_first_name').type(user.first_name);\n  cy.get('#ContactUsFrm_email').type(user.email);\n}); // cy.get('.info_links_footer > :nth-child(5) > a').click()\n//  BY XPATH\n// cy.xpath('//a[contains(@href, \"contact\")]').click()\ncy.get(\"a[href$= 'contact']\").click().then(function (linkText) {\n  cy.log(\"This is a link text: \" + linkText.text());\n});\ncy.get('#ContactUsFrm_email').should('have.attr', 'name', 'email');\ncy.get('#ContactUsFrm_enquiry').type(\"Iskreno ne znam zasto opet radim jedno te isto\"); // cy.get('.col-md-6 > .btn').click()\n// BY CSSs Selector\ncy.get('button[title = \"Submit\"]').click(); // Assertions\ncy.get('.mb40 > :nth-child(3)').should('have.text', 'Your enquiry has been successfully sent to the store owner!');\ncy.log(\"Test has completed!\");\nconsole.log(\"Test has completed\");",
              "err": {
                "message": "CypressError: `cy.click()` can only be called on a single element. Your subject contained 2 elements. Pass `{ multiple: true }` if you want to serially click each element.\n\nhttps://on.cypress.io/click",
                "estack": "CypressError: `cy.click()` can only be called on a single element. Your subject contained 2 elements. Pass `{ multiple: true }` if you want to serially click each element.\n\nhttps://on.cypress.io/click\n    at mouseAction (https://automationteststore.com/__cypress/runner/cypress_runner.js:151230:17)\n    at Context.click (https://automationteststore.com/__cypress/runner/cypress_runner.js:151374:14)\n    at Context.<anonymous> (https://automationteststore.com/__cypress/runner/cypress_runner.js:168170:21)\nFrom Your Spec Code:\n    at Context.eval (https://automationteststore.com/__cypress/tests?p=cypress\\integration\\automation-test-store\\contact-us.js:46:35)",
                "diff": null
              },
              "uuid": "d40aa0a4-88c5-4776-9cef-84f70d4e1aed",
              "parentUUID": "c9663d5f-06c1-4625-bf67-9bde801a5f32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d40aa0a4-88c5-4776-9cef-84f70d4e1aed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5469,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d28b5f52-8cf7-40ab-996e-70cf400da09e",
      "title": "",
      "fullFile": "cypress\\integration\\automation-test-store\\inspect-item.js",
      "file": "cypress\\integration\\automation-test-store\\inspect-item.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c1ba88a-6199-4467-bd6e-cbf647482f1a",
          "title": "Inspect Automation Test Store items using chain of commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click on the first item using item text",
              "fullTitle": "Inspect Automation Test Store items using chain of commands Click on the first item using item text",
              "timedOut": null,
              "duration": 3756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cypress code\ncy.visit(\"https://automationteststore.com\");\ncy.get('.prdocutname').contains('Skinsheen Bronzer Stick').click().then(function (itemHeaderText) {\n  console.log(\"Selected the following item: \" + itemHeaderText.text());\n});",
              "err": {},
              "uuid": "0d5d838f-33cd-4256-8f3b-7c1648d71ca5",
              "parentUUID": "5c1ba88a-6199-4467-bd6e-cbf647482f1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d5d838f-33cd-4256-8f3b-7c1648d71ca5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3756,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1f6f11a2-ba7a-4f70-8924-52413aa02b2f",
      "title": "",
      "fullFile": "cypress\\integration\\automation-test-store\\iterate-over-elements.js",
      "file": "cypress\\integration\\automation-test-store\\iterate-over-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb5cceee-3ca1-452c-938b-3b1487bab3ae",
          "title": "Iterate over elements",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click on specific product and add it to basket",
              "fullTitle": "Iterate over elements Click on specific product and add it to basket",
              "timedOut": null,
              "duration": 6543,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Seaweed Conditioner');",
              "err": {},
              "uuid": "e112df53-6f69-4b4d-84bb-12ad170f1c16",
              "parentUUID": "bb5cceee-3ca1-452c-938b-3b1487bab3ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e112df53-6f69-4b4d-84bb-12ad170f1c16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6543,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8fbb9fd8-722b-417f-882d-e326f12b50d6",
      "title": "",
      "fullFile": "cypress\\integration\\automation-test-store\\variables-and-cy-commands.js",
      "file": "cypress\\integration\\automation-test-store\\variables-and-cy-commands.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4f92e637-a7ba-4601-9f4b-64b999a1b750",
          "title": "Verifying variables, cypress commands and jquery commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validacte properties of the Contact Us Page",
              "fullTitle": "Verifying variables, cypress commands and jquery commands Validacte properties of the Contact Us Page",
              "timedOut": null,
              "duration": 3880,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://automationteststore.com/index.php?rt=content/contact'); //cypress code\n// Uses cypress commands and chaining - Is there a form and form header inside it\ncy.contains('#ContactUsFrm', 'Contact Us Form').find('#field_11').should('contain', 'First name'); //  JQuery approach\ncy.contains('#ContactUsFrm', 'Contact Us Form').then(function (text) {\n  var firstNameText = text.find('#field_11').text();\n  expect(firstNameText).to.contain('First name'); // Embeded commands (Closure)\n  cy.get('#field_11').then(function (fnText) {\n    cy.log(fnText.text());\n    cy.log(fnText);\n  });\n});",
              "err": {},
              "uuid": "683d64c1-78cd-4e65-8d8f-099c6b9abe24",
              "parentUUID": "4f92e637-a7ba-4601-9f4b-64b999a1b750",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "683d64c1-78cd-4e65-8d8f-099c6b9abe24"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3880,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1d7e3b64-ee9a-4efe-a948-3c15b524e82a",
      "title": "",
      "fullFile": "cypress\\integration\\automation-test-store\\add-multiple-items-to-basket.js",
      "file": "cypress\\integration\\automation-test-store\\add-multiple-items-to-basket.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cbb0f411-9169-4b19-b336-6de55d101b95",
          "title": "Add multiple items to basket - Improved version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add specific items to basket",
              "fullTitle": "Add multiple items to basket - Improved version Add specific items to basket",
              "timedOut": null,
              "duration": 17688,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "autoStore_HairCare_PO.addHairCareProductsToBasket();",
              "err": {},
              "uuid": "e254ca90-c49b-4142-84e1-fa6c4bb3ee1d",
              "parentUUID": "cbb0f411-9169-4b19-b336-6de55d101b95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e254ca90-c49b-4142-84e1-fa6c4bb3ee1d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17688,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}